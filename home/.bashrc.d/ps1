[[ $- = *i* ]] || return

# PS1 generator: https://xta.github.io/HalloweenBash/
# TODO: use different colors for different datacenters/environments using VLANs

USE_FORKED_LIQUIDPROMPT=false
USE_CLASSIC_PS1=false

if [[ "${USE_FORKED_LIQUIDPROMPT}" == "true" ]]; then
  if ! -f ~/.homesick/repos/liquidprompt/liquidprompt ]] ; then
    echo "Could not find cloned liquidprompt fork. Rerun \"~/.workstation_setup.sh\"?"
    echo "Using default \"${PS1}\"."
  else
    # had to fork nojhan/liquidprompt until merges are made for:
    #  bschwedler:feature/kubernetes-context, pull/476, etc.
    [[ $- = *i* ]] && source ~/.homesick/repos/liquidprompt/liquidprompt
  fi
elif [[ "${USE_FORKED_LIQUIDPROMPT}" == "false" && \
  "${USE_CLASSIC_PS1}" == "false" ]]; then
  if [[ -f /usr/local/share/liquidprompt ]]; then
    # homebrew installation of nojhan/liquidprompt and standard customizations
    [[ $- = *i* ]] && source /usr/local/share/liquidprompt
    # using the prefix variable will only execute the inner function on new terminals
    #  instead of every prompt display :(
    # (using tmux status bar instead for kubernetes info) LP_PS1_PREFIX="$(_kube_ps1) "
  fi
fi
if [[ "${USE_CLASSIC_PS1}"]]; then
  # declare some PS1 colors and helper functions
  NORMAL=$(tput sgr0)
  BOLD=$(tput bold)
  BLINK=$(tput blink)
  WHITE=$(tput setaf 7)
  RED_BG=$(tput setab 1)
  GREEN=$(tput setaf 2)
  BROWN=$(tput setaf ?)
  BLUE=$(tput setaf 4)
  YELLOW=$(tput setaf 3)

  function _parse_git_branch () {
    if hash git 2>/dev/null ; then
      # get git branch
      branch=$(git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')
      [[ -n ${branch} ]] && echo " (${branch}) "
    else
      echo ''
    fi
  }
  function _kube_ps1() {
    # TODO: better error handling
    if hash kubectl 2>/dev/null ; then
      # get kubernetes context and namespace info
      # http://blog.cloud66.com/kubernetes-and-gcloud-bash-prompts/
      # https://gist.github.com/seanknox/c42e77b189678cbddd3c347e5816a152
      # https://stackoverflow.com/questions/17439482/how-to-make-a-text-blink-in-shell-script
      local K8S_CONTEXT=$(kubectl config current-context 2> /dev/null || true)
      local K8S_NS=$(kubectl config view ${K8S_CONTEXT} \
        --output json | jq ".contexts[] | select(.name==\"${K8S_CONTEXT}\") \
        | .context.namespace" | tr -d '"' || true)
      [[ -n ${K8S_CONTEXT} ]] && echo "${K8S_CONTEXT%%.*}:${K8S_NS} "
    else
      echo ''
    fi
  }

  export PS1="\[${BOLD}\]\[${GREEN}\]\u@\h\[${BLUE}\] \w\[${BROWN}\]\[${BLUE}\]\$(_parse_git_branch)\$\[${NORMAL}\] "
  PS1="\[${YELLOW}\]\$(_kube_ps1)\[${NORMAL}\]"$PS1
fi
