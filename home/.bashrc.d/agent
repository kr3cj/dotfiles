[[ $- = *i* ]] || return
${IS_OSX} || return

# ssh agent stuff
[[ -f ${HOME}/.ssh/ssh-agent-setup ]] && source ${HOME}/.ssh/ssh-agent-setup
$(env | grep -q SSH_AUTH_SOCK) || eval $(ssh-agent -s)

### load ssh keys into agent ###
# TODO: better integrate passphrase from LastPass CLI? https://svkt.org/~simias/lpass/#ssh-agent
# load key into agent if necessary
if ! $(ssh-add -l | grep -q "/.ssh/id_rsa\ ("); then
  # create key if necessary
  if [[ ! -f ~/.ssh/id_rsa ]]; then
    (umask 177
    lpass show --field="Private Key" "Work SSH Key" > ~/.ssh/id_rsa
    )
  fi
  lpass show --field=Passphrase --clip 'Work SSH Key'
  ssh-add -t 36000 -k ~/.ssh/id_rsa
  pbcopy </dev/null
  rm -f ~/.ssh/id_rsa
fi

# temporarily load service account keys
for key2 in jenkins-builder coreos ; do
  if ! $(ssh-add -l | grep -q "/.ssh/id_rsa_${key2}\ (" ); then
    (umask 177
    vault read -field=private-key secret/ssh-keys/${key2} > ~/.ssh/id_rsa_${key2}
    )
    ssh-add -t 36000 -k ~/.ssh/id_rsa_${key2}
    rm -f ~/.ssh/id_rsa_${key2}
    # TODO: ssh-agent can load keys without a file
    # but they cant be referenced with "ssh -i <key_path>":
    # ssh-add - <<< $(vault read -field=private-key secret/ssh-keys/blah)
  fi
done
