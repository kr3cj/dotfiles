[[ $- = *i* ]] || return

alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'
alias ducks="sudo du -cshx ./ | sort -h"
alias cdd="homeshick cd dotfiles"
alias pp="source ~/.bash_profile"

# TODO: not defined when jumping servers (e.g. ssh lax1 -t ssh lax2)
function pathadd() {
  unset newpath
  local newpath=${1%/}
  if [[ ! -d "${newpath}" ]] ; then
    # echo "Directory \"${1}\" does not exist."
    return
  fi
  if [[ "${PATH}" =~ (^|:)"${newpath}"(:|$) ]] ; then
    # echo "Path \"${newpath}\" already exists in path \"${PATH}\"."
    return
  fi
  if [[ "${2}" == "after" ]] ; then
    export PATH="${PATH}:${newpath}"
  else
    export PATH="${newpath}:${PATH}"
  fi
}

function port {
  timeout 2 bash -c "echo >/dev/tcp/${1}/{2}" > /dev/null 2>&1 && echo success || echo failure
}

function acp {
  cp -av ${1} ${1}.$(date +%Y-%m-%d %H-%M)
  # cp -av ${1} ${1}.$(date --rfc-3339=seconds)
}

function find-error() {
  sudo grep -riE 'DENIED|ERR|EXIST|FAIL|INVALID|SPECIFIED|SUCH|UNABLE|WARN' ${1}
}

function gitp {
  local gbranch=${1:-master}
  git fetch --prune --all
  git checkout ${gbranch}
  git pull origin ${gbranch}
  # git fetch origin --prune
  # git fetch --tags
  git status
}

function _create_socks_proxy {
  local host1=${1}
  local port1=${2}
  local username=${3}
  local test_url=${4:-"http://www.google.com"}
  local ssh_proxy_options="-f -N -D"

  # note: lsof still returns a row when port open but dead: lsof -nP -i4TCP:${port1} | grep -q LISTEN
  # --socks5-hostname
  if [[ $(curl \
    --connect-timeout 1 \
    --silent \
    --output /dev/null \
    --write-out "%{http_code}" \
    --head \
    --socks5 localhost:${port1} \
    ${test_url} \
    ) -ne 200 \
  ]] ; then
    # first kill any old sessions
    pgrep -f "ssh .* ${ssh_proxy_options} ${port1} ${username}@${host1}"
    pkill -f "ssh .* ${ssh_proxy_options} ${port1} ${username}@${host1}"
    echo "Establishing ssh tunnel with ${username}@${host1}:${port1}..."
    # TODO: capture output only if the command fails
    ssh ${ssh_proxy_options} ${port1} "${username}@${host1}" \
      -o TCPKeepAlive=yes -o ConnectTimeout=1 -o ConnectionAttempts=1 2> /dev/null
  fi
  [[ ${?} -ne 0 ]] && echo "Unable to establish ssh connection to ${host1}."
}

if [[ "${IS_OSX}" == "true" ]]; then
  alias ls="ls -G"
  alias ll="ls -hl -G"
  alias srm="/bin/rm -vP"
  alias lpw="lpass show --password -c LDAP"
  alias slack="open -a Slack"
  alias spotify="open -a Spotify"
  # alias gphoto="open --background -a \"Google Photos Backup\""
  alias gphoto="open --background -a \"Backup and Sync\""

  function ssh {
    local host1="${@}"
    # copy ldap password to clipboard before ssh'ing to work hosts
    if [[ "${host1}" =~ (wyn*|for*|lax*|fsh*|lsh*|finf*|linf*|192.168.*|\
artifactory|builder\
\.$(echo ${CUSTOM_WORK_DOMAINS[@]} | tr ' ' '|')) ]]; then
      lpass show --password -c LDAP && $(which ssh) ${host1}
    else
      $(which ssh) ${host1}
    fi
  }
elif [[ "${IS_LINUX}" == "true" ]]; then
  alias ls="ls --color=auto"
  alias ll="ls -hl --color=auto"
  alias list-services="systemctl list-unit-files --type=service | grep enabled | \
    cut -d. -f1 | sort"
fi
