[[ $- = *i* ]] || return
${IS_OSX} || return

# remote host for container tools (https://docs.docker.com/engine/security/https/)
export DOCKER_REGISTRY="${CUSTOM_WORK_DEFAULT_AWS_ACCT}.dkr.ecr.us-east-1.amazonaws.com"

function docker-login () {
  aws ecr get-login --no-include-email --region us-east-1 | bash
}

alias docker-clean="sudo docker system prune --all --force --volumes"

function docker-reset () {
  [[ -f docker-compose.yml || -f docker-compose.yaml ]] && docker-compose down --remove-orphans
  sudo docker stop $(sudo docker container ls -a -q)
  sudo docker system prune -a -f --volumes

  ${IS_LINUX} && sudo systemctl restart docker.service
  # ${IS_OSX} && (echo -e "\nRestarting docker... (wait 1 min)" && killall Docker && open /Applications/Docker.app && sleep 60)

  sudo docker ps -a
}

# when connected to aws-vault using certain rolearns, auth to ECR if necessary
# if [[ -n ${AWS_VAULT} ]]; then
#   docker ps -a > /dev/null || return 1
#   $(docker login | grep -q 'Username (AWS):') && "aws ecr get-login --no-include-email | bash"
#   # check_ecr_auth="curl \
#   #   --connect-timeout 1 \
#   #   --header \"Authorization: Basic $(aws ecr get-authorization-token \
#   #     --output text --query 'authorizationData[].authorizationToken')\" \
#   #   --silent \
#   #   --output /dev/null \
#   #   --write-out \"%{http_code}\" \
#   #   https://${CUSTOM_WORK_DEFAULT_AWS_ACCT}.dkr.ecr.us-east-1.amazonaws.com/v2/_catalog"
#   # if [[ $(eval ${check_ecr_auth}) -ne 200 ]]; then
#   #   echo "Authenticating to ECR..."
#   #   aws ecr get-login --no-include-email | bash
#   # fi
# fi
