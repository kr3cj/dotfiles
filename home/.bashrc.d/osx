[[ $- = *i* ]] || return
${IS_OSX} || return

# Workaround for OSX incompatibility with commercial routers
[[ $(sysctl -n net.link.ether.inet.arp_unicast_lim) -ne 1 ]] && \
  sudo sysctl -w net.link.ether.inet.arp_unicast_lim=1

MANPATH="/usr/local/opt/coreutils/libexec/gnuman:/usr/local/opt/findutils/share/man:${MANPATH-/usr/share/man}"
MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:${MANPATH}"
MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:${MANPATH}"
export MANPATH

# TODO: move most of this to a script called after login or screen-unlock
#  https://stackoverflow.com/questions/6442364/running-script-upon-login-mac
${HEALTHY_INTERNET} || return
# set up network related profile

# get network awareness
ip_address=""
at_work="false"
at_home="false"

ip_address=$(/sbin/ifconfig en0 | grep 'inet ' | grep -v '127.0.0.1' | awk '{print $2}')

# figure out location
( [[ ${ip_address} =~ "${CUSTOM_WORK_SUBNET}.49." ]] || [[ ${ip_address} =~ "${CUSTOM_WORK_SUBNET}.200." ]] \
  || [[ ${ip_address} =~ "${CUSTOM_WORK_SUBNET}.67." ]] ) && at_work="true"
[[ ${ip_address} =~ "${CUSTOM_HOME_SUBNET}" ]] && at_home="true"

if ${at_home} ; then
  if $(ping -c1 -W1 -i0.1 ${CUSTOM_NAS_HOST} &> /dev/null) ; then
    # killall -HUP mountd
    mount | grep -q "Documents/share1" || mount -t nfs -o \
      vers=4,rw,soft,intr,bg,rsize=32768,wsize=32768,dsize=32768 \
      ${CUSTOM_NAS_HOST}:/share ~/Documents/share1
    mount | grep -q "Pictures/share1" || mount -t nfs -o \
      vers=4,rw,soft,intr,bg,rsize=32768,wsize=32768,dsize=32768 \
      ${CUSTOM_NAS_HOST}:/share/pictures ~/Pictures/share1
  fi
  # start google photos backup
  $(pgrep -q "Google Photos Backup") || \
    ("/Applications/Google Photos Backup.app/Contents/MacOS/Google Photos Backup" & ) &> /dev/null
  # $(ping -c1 -W1 -i0.1 laphroaig.${CUSTOM_WORK_DOMAINS[1]}) || /opt/cisco/anyconnect/bin/vpn connect readytalk
elif ${at_work} ; then
  # SSH tunnel to datacenters
  _create_socks_proxy "forinf2.${CUSTOM_WORK_DOMAINS[0]}" "2002" "${CUSTOM_LDAP_NAME}"
  _create_socks_proxy "laxinf2.${CUSTOM_WORK_DOMAINS[0]}" "2003" "${CUSTOM_LDAP_NAME}"
  # SSH tunnel to home if not already set up
  _create_socks_proxy "home.${CUSTOM_HOME_DOMAIN}" "2000" "${CUSTOM_WORK_EMAIL/\.*/}"
    # http://web.${CUSTOM_NAS_HOST#*\.}/that.gif

  while $(mount | grep -q "Documents/share1") ; do
    sudo umount -fv -t nfs ${CUSTOM_NAS_HOST}:/share
  done
  while $(mount | grep -q "Pictures/share1") ; do
    sudo umount -fv -t nfs ${CUSTOM_NAS_HOST}:/share/pictures
  done
  # establish vpn connection to PGi
  # $(ping -c1 -w1 -i0.1 172.x.x.x &> /dev/null) || /opt/cisco/anyconnect/bin/vpn connect pgi
  # pkill "Google Photos Backup"
  $(pgrep -q "Slack") || \
    ("/Applications/Slack.app/Contents/MacOS/Slack" & ) &> /dev/null
fi
