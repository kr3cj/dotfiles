[[ $- = *i* ]] || return
${IS_MACOS} || return

# moved echo from .bashrc since text from there can mess up rsync
${HEALTHY_INTERNET} || echo "Skipping network related profile tasks as \
there's no healthy internet connectivity."

if [[ "${HEALTHY_INTERNET}" == true ]] ; then
  # passman doesn't have support for debug logging, session timeout control,
  # or even an easy way to know if you're authenticated
  # export OP_LOG_LEVEL=7
  # export OP_SESSION_TIMEOUT=43200

  # need_to_auth_passman="false"
  if ! session_is_active passman; then
    # need_to_auth_passman="true"

    # # first, grab possibly stale op session token
    if [[ -f ~/.pm_session_token && -s ~/.pm_session_token ]]; then
      [[ ${VERBOSE} -ge 1 ]] && \
        echo "passman session file found; assiging it to \${OP_SESSION_my}"
      $(brew --prefix coreutils)/libexec/gnubin/chmod -c 600 ~/.pm_session_token
      export OP_SESSION_my="$(head -n1 ~/.pm_session_token)"
    # else
    #   [[ ${VERBOSE} -ge 1 ]] && \
    #     echo "passman session file not found or empty"
    #   (umask 077 touch ~/.pm_session_token)
    #   need_to_auth_passman="true"
    fi
    # # second, do a test call
    # if ! $(${timeout_path} 1 op list vaults --session ${OP_SESSION_my} &> /dev/null); then
    #   [[ ${VERBOSE} -ge 1 ]] && \
    #     echo "\"op list vaults --session ${OP_SESSION_my}\" failed."
    #   need_to_auth_passman="true"
    # fi
    # # finally, signin if necessary
    # if [[ "${need_to_auth_passman}" == true ]]; then
      [[ ${VERBOSE} -ge 1 ]] && \
        echo "Need to auth passman; about to run \"op signin my --raw\""
      # clear contents of file
      > ~/.pm_session_token
      OP_SESSION_my="$(op signin my --raw)"
      if [[ "${?}" -eq 0 ]]; then
        session_is_active passman "29 minutes" || true
        echo ${OP_SESSION_my} > ~/.pm_session_token
      fi
      clear_clip 10
    # fi
    # if ! ${timeout_path} 1 op signin my --raw > /dev/null; then
    # if ! [[ -f ~/.pm_session_token && -s ~/.pm_session_token ]]; then
    # if [[ -z ${OP_SESSION_my} ]]; then
    #   eval $(op signin my) && \
    #   echo ${OP_SESSION_my} > ~/.pm_session_token
    # else
    #   export OP_SESSION_my="$(cat ~/.pm_session_token)"
    # fi
  fi
fi