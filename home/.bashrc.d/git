# setup git
if ${IS_MACOS} ; then
  export GIT_SSH="/usr/bin/ssh"
fi

# shellcheck disable=SC2120
function gitp {
  local default_branch="$(git remote show origin | grep "HEAD branch" | awk '{print $3}')"
  local current_branch="$(git rev-parse --abbrev-ref HEAD)"
  local desired_branch=${1:-${current_branch}}

  if ! [[ "${default_branch}" == "${current_branch}" ]]; then
    # if ! [[ "${current_branch}" =~ "master" || "${current_branch}" =~ ""]]; then
    case "${current_branch}" in
      master|default|pending|main)
        echo "${LP_COLOR_SAML2AWS_PROD}Update default branch: \
\"git branch -m master ${default_branch}; git fetch origin; git branch -u origin/main ${default_branch}\"${NO_COL}" ;;
      *)
        echo -e "\n Default branch: \"${default_branch}\"\n Current branch: \"${current_branch}\"\n" ;;
    esac
  fi

  git fetch --prune --all

  # delete local branches (excluding default and current) which have been merged
  # TODO: delete local branches that were deleted upstream (ex: closed PRs)
  for br1 in $(git branch --merged | grep -vE "${default_branch}|${current_branch}"); do
    echo -e "\nDeleting local branch \"${br1}\" that's already merged..."
    git branch -d ${br1}
  done
  git checkout ${desired_branch}
  git pull origin ${desired_branch}
  if ! [[ "${desired_branch}" == "${current_branch}" ]]; then
    # conditionally warn if desired doesnt match current and suggest rebase?
    echo "You might consider running \"git pull --rebase origin ${desired_branch}\"..."
  fi
  # git pull --rebase origin ${desired_branch} # could be a problem if 2+ folks working on same branch
  git status
}

function update-all-repos {
  for repo1 in $(find ~/build/github -mindepth 1 -maxdepth 6 -path "*/.git/config") ; do echo -e "\n${repo1%.git/config}" ; \
    cd "${repo1%.git/config}" \
    && git clean -xfd \
    && gitp \
    && cd - || return; \
  done
}
